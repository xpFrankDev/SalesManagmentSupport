package Ventanas;

import Clases.Conectar;
import Clases.Log;
import VentanasRST.Main;
import java.awt.Image;
import java.awt.Point;
import java.awt.event.KeyEvent;
import java.awt.event.MouseEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import rojerusan.RSNotifyFade;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author soporte
 */
public class usersession extends javax.swing.JFrame {

    Conectar c;
    DefaultTableModel modelo;
    Log l;
    PreparedStatement pst;
    ResultSet rs;
    boolean llave = false;
    boolean newUser = false;
    boolean editar = false;
    //Main m;
    public usersession() {
        initComponents();
        llenarTabla();//Lena la Tabla con todos los Usuarios
        setFocus();//Establece el orden del Focus
        changeIcon();

    }
    /*public usersession(Main m) {
        initComponents();
        llenarTabla();//Lena la Tabla con todos los Usuarios
        setFocus();//Establece el orden del Focus
        changeIcon();
        this.m=m;
    }*/

    public void changeIcon() {
       Image icon = new ImageIcon(getClass().getResource("/imgs/logo_rossetti.jpg")).getImage();
        setIconImage(icon);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PopTabla = new javax.swing.JPopupMenu();
        Editar = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        Eliminar = new javax.swing.JMenuItem();
        rSPanelBorderGradient1 = new RSMaterialComponent.RSPanelBorderGradient();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla = new RSMaterialComponent.RSTableMetro();
        txtNombre = new rojeru_san.rsfield.RSTextFullRound();
        txtUsuario = new rojeru_san.rsfield.RSTextFullRound();
        jLabel13 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        limpiarButton = new rojeru_san.rsbutton.RSButtonCircleEffect();
        jLabel8 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        labelIcon1 = new necesario.LabelIcon();
        jLabel12 = new javax.swing.JLabel();
        txtTelefono = new rojeru_san.rsfield.RSTextFullRound();
        jLabel6 = new javax.swing.JLabel();
        combo = new RSMaterialComponent.RSComboBoxMaterial();
        txtDni = new rojeru_san.rsfield.RSTextFullRound();
        jLabel16 = new javax.swing.JLabel();
        txtContraseña = new rojeru_san.rsfield.RSPassViewRound();
        nuevoButton = new rojeru_san.rsbutton.RSButtonCircleEffect();
        editarButton = new rojeru_san.rsbutton.RSButtonCircleEffect();
        txtID = new rojeru_san.rsfield.RSTextFullRound();
        guardarButton = new rojeru_san.rsbutton.RSButtonCircleEffect();
        jLabel15 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtDireccion = new rojeru_san.rsfield.RSTextFullRound();
        rSPanelBorderGradient2 = new RSMaterialComponent.RSPanelBorderGradient();
        jLabel1 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        txtBusqueda = new rojeru_san.rsfield.RSTextFullRound();
        jLabel19 = new javax.swing.JLabel();

        Editar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/edit.png"))); // NOI18N
        Editar.setText("Editar Usuario");
        Editar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                EditarMouseClicked(evt);
            }
        });
        Editar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditarActionPerformed(evt);
            }
        });
        PopTabla.add(Editar);
        PopTabla.add(jSeparator1);

        Eliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/rubbish.png"))); // NOI18N
        Eliminar.setText("Eliminar Usuario");
        PopTabla.add(Eliminar);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Gestión de Usuarios");
        setUndecorated(true);
        setResizable(false);

        rSPanelBorderGradient1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        rSPanelBorderGradient1.setBorderBottom(false);
        rSPanelBorderGradient1.setBorderLeft(false);
        rSPanelBorderGradient1.setBorderRight(false);
        rSPanelBorderGradient1.setBorderTop(false);
        rSPanelBorderGradient1.setColorPrimario(new java.awt.Color(255, 255, 255));
        rSPanelBorderGradient1.setColorSecundario(new java.awt.Color(204, 204, 204));

        tabla.setAutoCreateRowSorter(true);
        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "Nombre", "Usuario", "Nivel"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabla.setBackgoundHead(new java.awt.Color(161, 54, 48));
        tabla.setBackgoundHover(new java.awt.Color(161, 54, 48));
        tabla.setColorPrimaryText(new java.awt.Color(161, 54, 48));
        tabla.setColorSecundaryText(new java.awt.Color(161, 54, 48));
        tabla.setGridColor(new java.awt.Color(161, 54, 48));
        tabla.setSelectionBackground(new java.awt.Color(161, 54, 48));
        tabla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabla);
        if (tabla.getColumnModel().getColumnCount() > 0) {
            tabla.getColumnModel().getColumn(0).setMinWidth(80);
            tabla.getColumnModel().getColumn(0).setPreferredWidth(80);
            tabla.getColumnModel().getColumn(0).setMaxWidth(80);
            tabla.getColumnModel().getColumn(2).setMinWidth(100);
            tabla.getColumnModel().getColumn(2).setPreferredWidth(100);
            tabla.getColumnModel().getColumn(2).setMaxWidth(100);
            tabla.getColumnModel().getColumn(3).setMinWidth(140);
            tabla.getColumnModel().getColumn(3).setPreferredWidth(140);
            tabla.getColumnModel().getColumn(3).setMaxWidth(140);
        }

        txtNombre.setBackground(new java.awt.Color(161, 54, 48));
        txtNombre.setForeground(new java.awt.Color(255, 255, 255));
        txtNombre.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtNombre.setBorderColor(new java.awt.Color(204, 204, 204));
        txtNombre.setDisabledTextColor(new java.awt.Color(161, 54, 48));
        txtNombre.setEnabled(false);
        txtNombre.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        txtNombre.setPhColor(new java.awt.Color(255, 255, 255));
        txtNombre.setPlaceholder("***Ingrese Nombres y Apellidos***");
        txtNombre.setPreferredSize(new java.awt.Dimension(250, 30));
        txtNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreActionPerformed(evt);
            }
        });

        txtUsuario.setBackground(new java.awt.Color(161, 54, 48));
        txtUsuario.setForeground(new java.awt.Color(255, 255, 255));
        txtUsuario.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtUsuario.setBorderColor(new java.awt.Color(204, 204, 204));
        txtUsuario.setDisabledTextColor(new java.awt.Color(161, 54, 48));
        txtUsuario.setEnabled(false);
        txtUsuario.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        txtUsuario.setPhColor(new java.awt.Color(255, 255, 255));
        txtUsuario.setPlaceholder("***Ingrese Usuario***");
        txtUsuario.setPreferredSize(new java.awt.Dimension(250, 30));
        txtUsuario.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtUsuarioKeyTyped(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(94, 116, 165));
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText("Limpiar");

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(94, 116, 165));
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("Editar");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        jLabel7.setText("DNI:");

        limpiarButton.setBackground(new java.awt.Color(94, 116, 165));
        limpiarButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/borrar.png"))); // NOI18N
        limpiarButton.setColorHover(new java.awt.Color(94, 116, 165));
        limpiarButton.setPreferredSize(new java.awt.Dimension(88, 88));
        limpiarButton.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                limpiarButtonFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                limpiarButtonFocusLost(evt);
            }
        });
        limpiarButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                limpiarButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                limpiarButtonMouseExited(evt);
            }
        });
        limpiarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limpiarButtonActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText("Privilegio:");

        jLabel17.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        jLabel17.setText("Datos de Acceso");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        jLabel4.setText("Contraseña:  *");

        labelIcon1.setBackground(new java.awt.Color(206, 206, 206));
        labelIcon1.setForeground(new java.awt.Color(161, 54, 48));
        labelIcon1.setIcons(rojeru_san.efectos.ValoresEnum.ICONS.SEARCH);

        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(94, 116, 165));
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("Guardar");

        txtTelefono.setBackground(new java.awt.Color(161, 54, 48));
        txtTelefono.setForeground(new java.awt.Color(255, 255, 255));
        txtTelefono.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtTelefono.setBorderColor(new java.awt.Color(204, 204, 204));
        txtTelefono.setDisabledTextColor(new java.awt.Color(161, 54, 48));
        txtTelefono.setEnabled(false);
        txtTelefono.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        txtTelefono.setPhColor(new java.awt.Color(255, 255, 255));
        txtTelefono.setPlaceholder("Ingrese Teléfono");
        txtTelefono.setPreferredSize(new java.awt.Dimension(250, 30));
        txtTelefono.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTelefonoKeyTyped(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        jLabel6.setText("     Nombres y Apellidos:  *");

        combo.setBackground(new java.awt.Color(228, 228, 228));
        combo.setForeground(new java.awt.Color(161, 54, 48));
        combo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Usuario", "Administrador" }));
        combo.setToolTipText("Privilegios del Usuario");
        combo.setColorMaterial(new java.awt.Color(161, 54, 48));
        combo.setEnabled(false);

        txtDni.setBackground(new java.awt.Color(161, 54, 48));
        txtDni.setForeground(new java.awt.Color(255, 255, 255));
        txtDni.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtDni.setBorderColor(new java.awt.Color(204, 204, 204));
        txtDni.setDisabledTextColor(new java.awt.Color(161, 54, 48));
        txtDni.setEnabled(false);
        txtDni.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        txtDni.setPhColor(new java.awt.Color(255, 255, 255));
        txtDni.setPlaceholder("Ingrese DNI");
        txtDni.setPreferredSize(new java.awt.Dimension(250, 30));
        txtDni.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDniKeyTyped(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        jLabel16.setText("Dirección:");

        txtContraseña.setBackground(new java.awt.Color(161, 54, 48));
        txtContraseña.setForeground(new java.awt.Color(255, 255, 255));
        txtContraseña.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtContraseña.setToolTipText("");
        txtContraseña.setBorderColor(new java.awt.Color(204, 204, 204));
        txtContraseña.setDisabledTextColor(new java.awt.Color(161, 54, 48));
        txtContraseña.setEnabled(false);
        txtContraseña.setPhColor(new java.awt.Color(255, 255, 255));
        txtContraseña.setPlaceholder("***Ingrese Contraseña***");
        txtContraseña.setPreferredSize(new java.awt.Dimension(250, 30));
        txtContraseña.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtContraseñaKeyTyped(evt);
            }
        });

        nuevoButton.setBackground(new java.awt.Color(94, 116, 165));
        nuevoButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/agregar.png"))); // NOI18N
        nuevoButton.setColorHover(new java.awt.Color(94, 116, 165));
        nuevoButton.setPreferredSize(new java.awt.Dimension(88, 88));
        nuevoButton.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                nuevoButtonFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                nuevoButtonFocusLost(evt);
            }
        });
        nuevoButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                nuevoButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                nuevoButtonMouseExited(evt);
            }
        });
        nuevoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nuevoButtonActionPerformed(evt);
            }
        });

        editarButton.setBackground(new java.awt.Color(94, 116, 165));
        editarButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/editar.png"))); // NOI18N
        editarButton.setColorHover(new java.awt.Color(94, 116, 165));
        editarButton.setPreferredSize(new java.awt.Dimension(88, 88));
        editarButton.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                editarButtonFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                editarButtonFocusLost(evt);
            }
        });
        editarButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                editarButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                editarButtonMouseExited(evt);
            }
        });
        editarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarButtonActionPerformed(evt);
            }
        });

        txtID.setBackground(new java.awt.Color(204, 204, 204));
        txtID.setForeground(new java.awt.Color(161, 54, 48));
        txtID.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtID.setBorderColor(new java.awt.Color(161, 54, 48));
        txtID.setEnabled(false);
        txtID.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        txtID.setPhColor(new java.awt.Color(161, 54, 48));
        txtID.setPlaceholder("ID User");

        guardarButton.setBackground(new java.awt.Color(94, 116, 165));
        guardarButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/grabar.png"))); // NOI18N
        guardarButton.setColorHover(new java.awt.Color(94, 116, 165));
        guardarButton.setPreferredSize(new java.awt.Dimension(88, 88));
        guardarButton.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                guardarButtonFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                guardarButtonFocusLost(evt);
            }
        });
        guardarButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                guardarButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                guardarButtonMouseExited(evt);
            }
        });
        guardarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarButtonActionPerformed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        jLabel15.setText("Teléfono:");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        jLabel5.setText("ID:");

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(94, 116, 165));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("Nuevo");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        jLabel2.setText("Usuario:  *");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        jLabel9.setText("Buscar por Nombre:");

        txtDireccion.setBackground(new java.awt.Color(161, 54, 48));
        txtDireccion.setForeground(new java.awt.Color(255, 255, 255));
        txtDireccion.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtDireccion.setBorderColor(new java.awt.Color(204, 204, 204));
        txtDireccion.setDisabledTextColor(new java.awt.Color(161, 54, 48));
        txtDireccion.setEnabled(false);
        txtDireccion.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        txtDireccion.setPhColor(new java.awt.Color(255, 255, 255));
        txtDireccion.setPlaceholder("Ingrese Dirección");
        txtDireccion.setPreferredSize(new java.awt.Dimension(250, 30));

        rSPanelBorderGradient2.setBorderBottom(false);
        rSPanelBorderGradient2.setBorderLeft(false);
        rSPanelBorderGradient2.setBorderRight(false);
        rSPanelBorderGradient2.setBorderTop(false);
        rSPanelBorderGradient2.setColorPrimario(new java.awt.Color(161, 54, 48));
        rSPanelBorderGradient2.setColorSecundario(new java.awt.Color(204, 204, 204));
        rSPanelBorderGradient2.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                rSPanelBorderGradient2MouseDragged(evt);
            }
        });
        rSPanelBorderGradient2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                rSPanelBorderGradient2MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                rSPanelBorderGradient2MouseReleased(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 22)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("GESTIÓN DE USUARIOS");

        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/windowclose_104378.png"))); // NOI18N
        jLabel14.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel14.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel14MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout rSPanelBorderGradient2Layout = new javax.swing.GroupLayout(rSPanelBorderGradient2);
        rSPanelBorderGradient2.setLayout(rSPanelBorderGradient2Layout);
        rSPanelBorderGradient2Layout.setHorizontalGroup(
            rSPanelBorderGradient2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rSPanelBorderGradient2Layout.createSequentialGroup()
                .addGap(76, 76, 76)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel14))
        );
        rSPanelBorderGradient2Layout.setVerticalGroup(
            rSPanelBorderGradient2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rSPanelBorderGradient2Layout.createSequentialGroup()
                .addGroup(rSPanelBorderGradient2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, rSPanelBorderGradient2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        txtBusqueda.setBackground(new java.awt.Color(161, 54, 48));
        txtBusqueda.setForeground(new java.awt.Color(255, 255, 255));
        txtBusqueda.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtBusqueda.setBorderColor(new java.awt.Color(204, 204, 204));
        txtBusqueda.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        txtBusqueda.setPhColor(new java.awt.Color(255, 255, 255));
        txtBusqueda.setPlaceholder("Buscar por Nombres y Apellidos");
        txtBusqueda.setPreferredSize(new java.awt.Dimension(250, 30));
        txtBusqueda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBusquedaActionPerformed(evt);
            }
        });
        txtBusqueda.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtBusquedaKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBusquedaKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtBusquedaKeyTyped(evt);
            }
        });

        jLabel19.setForeground(new java.awt.Color(102, 102, 102));
        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel19.setText("Campos con ( * ) son Obligatorios.");

        javax.swing.GroupLayout rSPanelBorderGradient1Layout = new javax.swing.GroupLayout(rSPanelBorderGradient1);
        rSPanelBorderGradient1.setLayout(rSPanelBorderGradient1Layout);
        rSPanelBorderGradient1Layout.setHorizontalGroup(
            rSPanelBorderGradient1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(rSPanelBorderGradient2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(rSPanelBorderGradient1Layout.createSequentialGroup()
                .addGroup(rSPanelBorderGradient1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, rSPanelBorderGradient1Layout.createSequentialGroup()
                        .addGap(208, 208, 208)
                        .addGroup(rSPanelBorderGradient1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(rSPanelBorderGradient1Layout.createSequentialGroup()
                                .addComponent(nuevoButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(56, 56, 56)
                                .addComponent(editarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(rSPanelBorderGradient1Layout.createSequentialGroup()
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(56, 56, 56)
                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(rSPanelBorderGradient1Layout.createSequentialGroup()
                        .addGap(205, 205, 205)
                        .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, rSPanelBorderGradient1Layout.createSequentialGroup()
                        .addGroup(rSPanelBorderGradient1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(rSPanelBorderGradient1Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(rSPanelBorderGradient1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel6)
                                .addGroup(rSPanelBorderGradient1Layout.createSequentialGroup()
                                    .addGap(125, 125, 125)
                                    .addComponent(jLabel7))
                                .addGroup(rSPanelBorderGradient1Layout.createSequentialGroup()
                                    .addGap(94, 94, 94)
                                    .addComponent(jLabel15))
                                .addGroup(rSPanelBorderGradient1Layout.createSequentialGroup()
                                    .addGap(91, 91, 91)
                                    .addComponent(jLabel16))
                                .addGroup(rSPanelBorderGradient1Layout.createSequentialGroup()
                                    .addGap(102, 102, 102)
                                    .addComponent(jLabel2))
                                .addGroup(rSPanelBorderGradient1Layout.createSequentialGroup()
                                    .addGap(80, 80, 80)
                                    .addGroup(rSPanelBorderGradient1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(10, 10, 10)
                        .addGroup(rSPanelBorderGradient1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDni, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(rSPanelBorderGradient1Layout.createSequentialGroup()
                                .addGap(103, 103, 103)
                                .addComponent(jLabel17))
                            .addComponent(txtUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtContraseña, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(combo, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(rSPanelBorderGradient1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, rSPanelBorderGradient1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 89, Short.MAX_VALUE)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)
                        .addComponent(txtBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(labelIcon1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(rSPanelBorderGradient1Layout.createSequentialGroup()
                        .addGroup(rSPanelBorderGradient1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(rSPanelBorderGradient1Layout.createSequentialGroup()
                                .addGap(32, 32, 32)
                                .addGroup(rSPanelBorderGradient1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(rSPanelBorderGradient1Layout.createSequentialGroup()
                                        .addComponent(guardarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(56, 56, 56)
                                        .addComponent(limpiarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(rSPanelBorderGradient1Layout.createSequentialGroup()
                                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(56, 56, 56)
                                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(rSPanelBorderGradient1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane1)))
                        .addGap(9, 9, 9)))
                .addContainerGap())
        );
        rSPanelBorderGradient1Layout.setVerticalGroup(
            rSPanelBorderGradient1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rSPanelBorderGradient1Layout.createSequentialGroup()
                .addComponent(rSPanelBorderGradient2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(rSPanelBorderGradient1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(rSPanelBorderGradient1Layout.createSequentialGroup()
                        .addGroup(rSPanelBorderGradient1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel19)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(rSPanelBorderGradient1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(rSPanelBorderGradient1Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jLabel6)
                                .addGap(23, 23, 23)
                                .addComponent(jLabel7)
                                .addGap(23, 23, 23)
                                .addComponent(jLabel15)
                                .addGap(24, 24, 24)
                                .addComponent(jLabel16)
                                .addGap(64, 64, 64)
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel4)
                                .addGap(41, 41, 41)
                                .addComponent(jLabel8))
                            .addGroup(rSPanelBorderGradient1Layout.createSequentialGroup()
                                .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(11, 11, 11)
                                .addComponent(txtDni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(11, 11, 11)
                                .addComponent(txtTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(12, 12, 12)
                                .addComponent(txtDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel17)
                                .addGap(16, 16, 16)
                                .addComponent(txtUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(txtContraseña, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(26, 26, 26)
                                .addComponent(combo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(23, 23, 23)
                        .addGroup(rSPanelBorderGradient1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nuevoButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(editarButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(rSPanelBorderGradient1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(jLabel11)))
                    .addGroup(rSPanelBorderGradient1Layout.createSequentialGroup()
                        .addGroup(rSPanelBorderGradient1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(rSPanelBorderGradient1Layout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(rSPanelBorderGradient1Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(txtBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(labelIcon1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(23, 23, 23)
                        .addGroup(rSPanelBorderGradient1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(guardarButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(limpiarButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(rSPanelBorderGradient1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12)
                            .addComponent(jLabel13))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(rSPanelBorderGradient1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(rSPanelBorderGradient1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void nuevoButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nuevoButtonMouseExited
        nuevoButton.setSize(88, 88);

    }//GEN-LAST:event_nuevoButtonMouseExited

    private void nuevoButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nuevoButtonMouseEntered
        nuevoButton.setSize((int) (nuevoButton.getWidth() * 1.1), (int) (nuevoButton.getHeight() * 1.1));
    }//GEN-LAST:event_nuevoButtonMouseEntered

    private void txtNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreActionPerformed

    private void txtBusquedaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBusquedaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBusquedaActionPerformed

    private void txtBusquedaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBusquedaKeyPressed

    }//GEN-LAST:event_txtBusquedaKeyPressed
    int id = 0;
    private void tablaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaMouseClicked

        if (newUser == false && editar == false) {//Anulamos el comportamiento de la tabla si se registra Nuevo User o se Actualiza aLguno
            if (evt.getButton() == MouseEvent.BUTTON1) {
                buscarDatosUserSeleccionado();
            }
        }


    }//GEN-LAST:event_tablaMouseClicked

    private void limpiarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limpiarButtonActionPerformed
        int a = JOptionPane.showConfirmDialog(rootPane, "¿Esta Seguro de querer Limpiar los Datos?", "Limpiar Datos", JOptionPane.OK_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (a == JOptionPane.OK_OPTION) {//si la Respuesta es Positiva, se Limpian los Campos y resetean los valores booleans
            activarLimpiezaCampos();
        }
    }//GEN-LAST:event_limpiarButtonActionPerformed

    private void editarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarButtonActionPerformed
        if (newUser == true) {//Validamos que el ID no esté vacio, solo podemos editar cuando se seleccione un User y se asigne valor al IDtxt
            JOptionPane.showMessageDialog(rootPane, "No Puedes Editar si Esta Creando un Nuevo Usuario");
        } else if (txtID.getText().length() == 0) {//Validamos que no Seleccione Editar si está Creando Nuevo
            JOptionPane.showMessageDialog(rootPane, "Debe Seleccionar Antes un Usuario");
        } else {
            activarEditar();
        }
    }//GEN-LAST:event_editarButtonActionPerformed

    private void guardarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarButtonActionPerformed

        if (newUser == false && editar == false) {//Evaluamos que se haya presionado Editar o Nuevo antes de Guardar
            JOptionPane.showMessageDialog(rootPane, "Para Guardar los Datos debe Primero\n   1.- Crear Nuevo Usuario\n   2.- Editar Usuario Existente\n\nSi ha Seleccionado un Usuario Recuerde Presionar <Editar> para habilitar la Opcion de <Guardar>");
        } else // Si ha Presionado Editar o Guardar Verificamos...
        if (newUser == true) {// Si es Nuevo User
            if (validarCampos() == true) {
                try {
                    // Validamos los Campos antes de Crear nuevo
                    generarNewUser(); // Generamos nuevo User SI los campos han sido Validados
                } catch (Exception ex) {
                    Logger.getLogger(usersession.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        } else if (editar == true) {// Si no es Nuevo User Pero es Update User
            if (txtID.getText().length() == 0) {//Validamos que no Este Vacio el ID antes de Update
                JOptionPane.showMessageDialog(rootPane, "Debe Seleccionar Antes un Usuario");
            } else if (validarCampos() == true) {
                try {
                    //Validamos Campos antes de Update
                    generarUpdateUsuario(); // Generamos el Update al ID Tras validar Campos
                } catch (Exception ex) {
                    Logger.getLogger(usersession.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }


    }//GEN-LAST:event_guardarButtonActionPerformed

    private void nuevoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nuevoButtonActionPerformed
        if (newUser == true) {// si existe algún dato en los campos no se procede a newUser, para evitar choques con editar
            JOptionPane.showMessageDialog(rootPane, "Ya estas Creando un Nuevo Usuario. Concluye el Registro o Limpia los Datos");
        } else if (editar == true || newUser == true) {//Validamos que no Seleccione Nuevo si está Creando Nuevo
            JOptionPane.showMessageDialog(rootPane, "Debe Terminar el Proceso con el Actual Usuario antes de Crear uno Nuevo o Limpiar los Datos");
        } else {
            activarNuevoUser();
        }


    }//GEN-LAST:event_nuevoButtonActionPerformed

    private void txtBusquedaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBusquedaKeyReleased

        busquedaPersonalizada();

    }//GEN-LAST:event_txtBusquedaKeyReleased

    private void txtDniKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDniKeyTyped
        establecerLimiteDni(evt);
    }//GEN-LAST:event_txtDniKeyTyped

    private void txtTelefonoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTelefonoKeyTyped
        if (evt.getKeyChar() >= 32 && evt.getKeyChar() <= 47//Numeros parte1
                || evt.getKeyChar() >= 58 && evt.getKeyChar() <= 64//numerosparte2
                || evt.getKeyChar() >= 91 && evt.getKeyChar() <= 96
                || evt.getKeyChar() >= 97 && evt.getKeyChar() <= 122//Letras Minusculas
                || evt.getKeyChar() >= 65 && evt.getKeyChar() <= 90//Letras Mayusculas
                || evt.getKeyChar() >= 123 && evt.getKeyChar() <= 208
                || evt.getKeyChar() >= 210 && evt.getKeyChar() <= 240
                || evt.getKeyChar() >= 242 && evt.getKeyChar() <= 255
                || evt.getKeyChar() > 256) {

            evt.consume();

        } else if (txtDni.getText().length() > 8) {
            evt.consume();
        }
    }//GEN-LAST:event_txtTelefonoKeyTyped

    private void EditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditarActionPerformed
        System.out.println("S<:" + s);
        PopTabla.setVisible(false);
    }//GEN-LAST:event_EditarActionPerformed

    private void EditarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EditarMouseClicked

    }//GEN-LAST:event_EditarMouseClicked

    private void editarButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editarButtonMouseEntered
        editarButton.setSize((int) (editarButton.getWidth() * 1.1), (int) (editarButton.getHeight() * 1.1));
    }//GEN-LAST:event_editarButtonMouseEntered

    private void guardarButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_guardarButtonMouseEntered
        guardarButton.setSize((int) (guardarButton.getWidth() * 1.1), (int) (guardarButton.getHeight() * 1.1));
    }//GEN-LAST:event_guardarButtonMouseEntered

    private void limpiarButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_limpiarButtonMouseEntered
        limpiarButton.setSize((int) (limpiarButton.getWidth() * 1.1), (int) (limpiarButton.getHeight() * 1.1));
    }//GEN-LAST:event_limpiarButtonMouseEntered

    private void editarButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editarButtonMouseExited
        editarButton.setSize(88, 88);
    }//GEN-LAST:event_editarButtonMouseExited

    private void guardarButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_guardarButtonMouseExited
        guardarButton.setSize(88, 88);
    }//GEN-LAST:event_guardarButtonMouseExited

    private void limpiarButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_limpiarButtonMouseExited
        limpiarButton.setSize(88, 88);
    }//GEN-LAST:event_limpiarButtonMouseExited

    private void guardarButtonFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_guardarButtonFocusGained
        guardarButton.setSize((int) (guardarButton.getWidth() * 1.1), (int) (guardarButton.getHeight() * 1.1));
    }//GEN-LAST:event_guardarButtonFocusGained

    private void guardarButtonFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_guardarButtonFocusLost
        guardarButton.setSize(88, 88);
    }//GEN-LAST:event_guardarButtonFocusLost

    private void editarButtonFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_editarButtonFocusGained
        editarButton.setSize((int) (guardarButton.getWidth() * 1.1), (int) (guardarButton.getHeight() * 1.1));
    }//GEN-LAST:event_editarButtonFocusGained

    private void editarButtonFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_editarButtonFocusLost
        editarButton.setSize(88, 88);
    }//GEN-LAST:event_editarButtonFocusLost

    private void nuevoButtonFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nuevoButtonFocusGained
        nuevoButton.setSize((int) (guardarButton.getWidth() * 1.1), (int) (guardarButton.getHeight() * 1.1));
    }//GEN-LAST:event_nuevoButtonFocusGained

    private void nuevoButtonFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nuevoButtonFocusLost
        nuevoButton.setSize(88, 88);
    }//GEN-LAST:event_nuevoButtonFocusLost

    private void limpiarButtonFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_limpiarButtonFocusGained
        limpiarButton.setSize((int) (guardarButton.getWidth() * 1.1), (int) (guardarButton.getHeight() * 1.1));
    }//GEN-LAST:event_limpiarButtonFocusGained

    private void limpiarButtonFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_limpiarButtonFocusLost
        limpiarButton.setSize(88, 88);
    }//GEN-LAST:event_limpiarButtonFocusLost

    private void txtUsuarioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUsuarioKeyTyped
        if (txtUsuario.getText().length() > 20) {
            evt.consume();
        }
    }//GEN-LAST:event_txtUsuarioKeyTyped

    private void txtContraseñaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtContraseñaKeyTyped
        if (txtContraseña.getText().length() > 20) {
            evt.consume();
        }
    }//GEN-LAST:event_txtContraseñaKeyTyped

    private void txtBusquedaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBusquedaKeyTyped
        if (txtBusqueda.getText().length() > 20) {
            evt.consume();
        }
    }//GEN-LAST:event_txtBusquedaKeyTyped
int xx,yy;
    private void jLabel14MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel14MouseClicked
        this.dispose();
    }//GEN-LAST:event_jLabel14MouseClicked

    private void rSPanelBorderGradient2MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rSPanelBorderGradient2MouseDragged
        int x = evt.getXOnScreen();
            int y = evt.getYOnScreen();
            this.setLocation(x - xx, y - yy);
    }//GEN-LAST:event_rSPanelBorderGradient2MouseDragged

    private void rSPanelBorderGradient2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rSPanelBorderGradient2MousePressed
       setOpacity((float) 0.8);
            xx = evt.getX();
            yy = evt.getY();
    }//GEN-LAST:event_rSPanelBorderGradient2MousePressed

    private void rSPanelBorderGradient2MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rSPanelBorderGradient2MouseReleased
      setOpacity((float) 1.0);
    }//GEN-LAST:event_rSPanelBorderGradient2MouseReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(usersession.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(usersession.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(usersession.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(usersession.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new usersession().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem Editar;
    private javax.swing.JMenuItem Eliminar;
    private javax.swing.JPopupMenu PopTabla;
    private RSMaterialComponent.RSComboBoxMaterial combo;
    private rojeru_san.rsbutton.RSButtonCircleEffect editarButton;
    private rojeru_san.rsbutton.RSButtonCircleEffect guardarButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private necesario.LabelIcon labelIcon1;
    private rojeru_san.rsbutton.RSButtonCircleEffect limpiarButton;
    private rojeru_san.rsbutton.RSButtonCircleEffect nuevoButton;
    private RSMaterialComponent.RSPanelBorderGradient rSPanelBorderGradient1;
    private RSMaterialComponent.RSPanelBorderGradient rSPanelBorderGradient2;
    private RSMaterialComponent.RSTableMetro tabla;
    private rojeru_san.rsfield.RSTextFullRound txtBusqueda;
    private rojeru_san.rsfield.RSPassViewRound txtContraseña;
    private rojeru_san.rsfield.RSTextFullRound txtDireccion;
    private rojeru_san.rsfield.RSTextFullRound txtDni;
    private rojeru_san.rsfield.RSTextFullRound txtID;
    private rojeru_san.rsfield.RSTextFullRound txtNombre;
    private rojeru_san.rsfield.RSTextFullRound txtTelefono;
    private rojeru_san.rsfield.RSTextFullRound txtUsuario;
    // End of variables declaration//GEN-END:variables

    int row = 0;
    String s;

    private void getTa(java.awt.event.MouseEvent evt) {

        JTable source = (JTable) evt.getSource();
        Point point = evt.getPoint();
        row = source.rowAtPoint(evt.getPoint());
        int column = source.columnAtPoint(evt.getPoint());
        s = source.getModel().getValueAt(row, 0) + "";//System.out.println("Obtenido S: " + s);
        PopTabla.setLocation((int) point.getX(), (int) point.getY());
        PopTabla.setVisible(true);

    }

    public void llenarTabla() {
        modelo = (DefaultTableModel) tabla.getModel();

        String sql = "select ID as id, nombrecompleto as name, username as uname, nivel from usuarios order by name ASC";
        try (Connection conex = new Conectar("rstcot").getCon()) {
            try {
                PreparedStatement pst = conex.prepareStatement(sql);
                ResultSet rs = pst.executeQuery();
                vaciarTabla();
                while (rs.next()) {
                    modelo.addRow(new Object[]{
                        rs.getInt("id"), rs.getString("name"),
                        rs.getString("uname"), setNivel(rs.getString("nivel"))
                    });
                }
                pst.close();
                rs.close();
            } catch (Exception e) {
            }
        } catch (SQLException e) {
            Logger.getLogger(usersession.class.getName()).log(Level.SEVERE, null, e);
        } catch (Exception ex) {
            Logger.getLogger(usersession.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void vaciarTabla() {
        modelo = (DefaultTableModel) tabla.getModel();
        modelo.setRowCount(0);
    }

    private void cleanCampos() {
        txtBusqueda.setText("");
        txtContraseña.setText("");
        txtDireccion.setText("");
        txtDni.setText("");
        txtID.setText("");
        txtNombre.setText("");
        txtTelefono.setText("");
        txtUsuario.setText("");
        combo.setSelectedIndex(0);
    }

    private void desactivarCampos() {

        txtContraseña.setEnabled(false);
        txtDireccion.setEnabled(false);
        txtDni.setEnabled(false);

        txtNombre.setEnabled(false);
        txtTelefono.setEnabled(false);
        txtUsuario.setEnabled(false);
        combo.setEnabled(false);
    }

    private void llenarCombo() {
        combo.removeAllItems();
        if (Main.getLog().getNivel() < 3) {
            combo.addItem("Usuario");
            combo.addItem("Administrador");
        } else {
            combo.addItem("Usuario");
            combo.addItem("Administrador");
            combo.addItem("Desarrollador");
        }

    }

    private void activarCampos() {
        txtBusqueda.setEnabled(true);
        txtContraseña.setEnabled(true);
        txtDireccion.setEnabled(true);
        txtDni.setEnabled(true);

        txtNombre.setEnabled(true);
        txtTelefono.setEnabled(true);
        txtUsuario.setEnabled(true);
        combo.setEnabled(true);
    }

    private void generarUpdateUsuario() throws Exception {
        l = new Log();
        String idString = tabla.getValueAt(tabla.getSelectedRow(), 0).toString();//Tomamos el ID de la fila seleccionada
            id = Integer.parseInt(idString);//Paseamos a Int
        l.setId(id);
        l.BuscarID();
        l.setNomLargo(txtNombre.getText());
        l.setDni(txtDni.getText());
        l.setTelefono(txtTelefono.getText());
        l.setDireccion(txtDireccion.getText());
        l.setUsername(txtUsuario.getText());
        l.setPass(txtContraseña.getText());
        l.setNivel(combo.getSelectedIndex() + 1);
        int rsp = l.updateUser();
        if (rsp == 1) {
            new rojerusan.RSNotifyFade("¡¡SUCCESS!!", "Datos del Usuario " + txtNombre.getText() + " Guardados Correctamente", 7, RSNotifyFade.PositionNotify.BottomRight, RSNotifyFade.TypeNotify.SUCCESS).setVisible(true);
            desactivarCampos();
            cleanCampos();
            llenarTabla();
            txtBusqueda.setEnabled(true);
            llave = false;
            editar = false;
        } else {
            JOptionPane.showMessageDialog(rootPane, "Error");
            new rojerusan.RSNotifyFade("¡¡ERROR!!", "Mensaje de Error", 5, RSNotifyFade.PositionNotify.BottomRight, RSNotifyFade.TypeNotify.ERROR).setVisible(true);
        }
    }

    private void generarNewUser() throws Exception {
        l = new Log();
        l.setNomLargo(txtNombre.getText());
        l.setDni(txtDni.getText());
        l.setTelefono(txtTelefono.getText());
        l.setDireccion(txtDireccion.getText());
        l.setUsername(txtUsuario.getText());
        String pas = txtContraseña.getPassword().toString();
        System.out.println(pas);
        l.setPass(pas);
        l.setNivel(combo.getSelectedIndex() + 1);
        int rsp = l.insertUser();
        if (rsp == 1) {
            new rojerusan.RSNotifyFade("¡¡SUCCESS!!", "Datos del Usuario " + txtNombre.getText() + " Creados Correctamente", 7, RSNotifyFade.PositionNotify.BottomRight, RSNotifyFade.TypeNotify.SUCCESS).setVisible(true);
            desactivarCampos();
            cleanCampos();
            llenarTabla();
            txtBusqueda.setEnabled(true);
            llave = false;
            newUser = false;
        } else {
            JOptionPane.showMessageDialog(rootPane, "Error");
            new rojerusan.RSNotifyFade("¡¡ERROR!!", "Mensaje de Error", 5, RSNotifyFade.PositionNotify.BottomRight, RSNotifyFade.TypeNotify.ERROR).setVisible(true);
        }
    }

    private void activarEditar() {
        editar = true;
        activarCampos();
        llave = true;
        txtBusqueda.setEnabled(false);
        txtBusqueda.setText("");
    }

    private void activarNuevoUser() {
        llave = true;
        activarCampos();
        cleanCampos();
        txtBusqueda.setEnabled(false);
        txtBusqueda.setText("");
        newUser = true;
        txtBusqueda.setEnabled(true);
        txtNombre.requestFocus();;
    }

    private void buscarDatosUserSeleccionado() {
        
            String idString = tabla.getValueAt(tabla.getSelectedRow(), 0).toString();//Tomamos el ID de la fila seleccionada
            id = Integer.parseInt(idString);//Paseamos a Int
            l = new Log(id);//Validamos ID en usersession
            txtNombre.setText(l.getNomLargo());// Asigamos los valores encontrados a los campos de texto
            txtDni.setText(l.getDni());
            txtTelefono.setText(l.getTelefono());
            txtDireccion.setText(l.getDireccion());
            txtUsuario.setText(l.getUsername());
            System.out.println("Clave Tomada: "+l.getPass());
            txtContraseña.setText(l.getPass());
            
            //combo.setSelectedIndex(l.getNivel() - 1);//Nivel -1 ya que el comboBox empieza en 0 y Los niveles de Usuarios en 1
            combo.setSelectedItem(setNivel(String.valueOf(l.getNivel())));//Se selecciona el Item y no el Index
            //De acuerdo al valor (1,2,3) el metodo<setNivel(String)> retorna (1-Usuario),(2-Administrador) o (3, Gestor de Base de Datos)
            txtID.setText(id + "");
          
    }

    private void activarLimpiezaCampos() {
        llave = false;
        llenarTabla();
        cleanCampos();
        desactivarCampos();
        editar = false;
        newUser = false;
        txtBusqueda.requestFocus();
        new rojerusan.RSNotifyFade("¡¡Limpieza Terminada!!", "Se han Limpiado Todos los Campos sin Afectar la Base de Datos", 3, RSNotifyFade.PositionNotify.BottomRight, RSNotifyFade.TypeNotify.SUCCESS).setVisible(true);

    }

    private void eliminarUser() throws Exception {
        int a = JOptionPane.showConfirmDialog(rootPane, "¿Esta Seguro de Eliminar los datos de ¿" + txtNombre.getText() + " ?", "Eliminar Datos", JOptionPane.OK_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (a == JOptionPane.OK_OPTION) {//Si se confirma que se desea ELiminar el Usuario
            l = new Log(id);//Validamos exista el ID tomado
            int rsp = l.deleteUser();// se Elimina el ID se la baseDatos
            if (rsp == 1) {//Si Respuesta es Positiva
                new rojerusan.RSNotifyFade("¡¡SUCCESS!!", "Datos del Usuario " + txtNombre.getText() + " ELIMINADOS Correctamente", 7, RSNotifyFade.PositionNotify.BottomRight, RSNotifyFade.TypeNotify.SUCCESS).setVisible(true);
                desactivarCampos();
                cleanCampos();
                llenarTabla();
                txtBusqueda.setEnabled(true);
                llave = false;
                editar = false;
                newUser = false;
            } else {//En caso de existir un Error al Eliminar
                JOptionPane.showMessageDialog(rootPane, "Error");
                new rojerusan.RSNotifyFade("¡¡ERROR!!", "No se ha Podido Eliminar Al Usuario, Confirme que existe la información o contacte con el Administrador", 5, RSNotifyFade.PositionNotify.BottomRight, RSNotifyFade.TypeNotify.ERROR).setVisible(true);
            }

        }
    }

    private void busquedaPersonalizada() {
        if (txtBusqueda.getText().length() != 0 && llave == false) {

            try (Connection conex = new Conectar("rstcot").getCon()) {

                vaciarTabla();
                String sql = "select * from usuarios where LOWER (nombrecompleto) LIKE LOWER ('%" + txtBusqueda.getText() + "%' ) ";
                pst = conex.prepareStatement(sql);
                rs = pst.executeQuery();
                modelo = (DefaultTableModel) tabla.getModel();
                while (rs.next()) {

                    if (!rs.getObject("USERNAME").equals("") && !rs.getObject("USERNAME").equals("undefined")) {
                        modelo.addRow(new Object[]{rs.getObject("ID"), rs.getString("nombrecompleto"), rs.getObject("USERNAME"), rs.getObject("NIVEL")});
                    }

                }
                pst.close();
                rs.close();

            } catch (Exception e) {
                JOptionPane.showMessageDialog(rootPane, "Error! \n" + e);
                Logger.getLogger(usersession.class.getName()).log(Level.SEVERE, null, e);
            }
        } else if (txtBusqueda.getText().length() == 0) {
            llenarTabla();
        }
    }

    private Object setNivel(String string) {
        String valorx = "Usuario";
        switch (string) {
            case "2":
                valorx = "Administrador";
                break;

            case "3":
                valorx = "Gestor de Base de Datos";
                break;

            default:
                valorx = "Usuario";

        }
        return valorx;
    }

    private boolean validarCampos() {
        boolean pllave = false;
        if (txtNombre.getText().length() == 0) {//Validamos que Nombre no esté Vacio
            JOptionPane.showMessageDialog(rootPane, "Para Continuar el Campo <Nombre y Apellido> no debe estar Vacio");
        } else if (txtUsuario.getText().length() == 0) {//Validamos que Usuario no esté Vacio
            JOptionPane.showMessageDialog(rootPane, "Para Continuar el Campo <Usuario> no debe estar Vacio");
        } else if (txtContraseña.getText().length() == 0) {//Validamos que Contraseña no esté Vacio
            JOptionPane.showMessageDialog(rootPane, "Para Continuar el Campo <Contraseña> no debe estar Vacio");
        } else {
            pllave = true;
        }
        return pllave;
    }

    private void setFocus() {

        txtNombre.setNextFocusableComponent(txtDni);
        combo.setNextFocusableComponent(guardarButton);
        guardarButton.setNextFocusableComponent(limpiarButton);
        
        if (Main.getLog() != null) {
            if (Main.getVendedor() != null && Main.getLog().getNivel() == 3) {
                combo.addItem("Gestor de Base de Datos");
            }
        }

    }

    private void establecerLimiteDni(KeyEvent evt) {
        if (evt.getKeyChar() >= 32 && evt.getKeyChar() <= 47//Numeros parte1
                || evt.getKeyChar() >= 58 && evt.getKeyChar() <= 64//numerosparte2
                || evt.getKeyChar() >= 91 && evt.getKeyChar() <= 96
                || evt.getKeyChar() >= 97 && evt.getKeyChar() <= 122//Letras Minusculas
                || evt.getKeyChar() >= 65 && evt.getKeyChar() <= 90//Letras Mayusculas
                || evt.getKeyChar() >= 123 && evt.getKeyChar() <= 208
                || evt.getKeyChar() >= 210 && evt.getKeyChar() <= 240
                || evt.getKeyChar() >= 242 && evt.getKeyChar() <= 255
                || evt.getKeyChar() > 256) {

            evt.consume();

        } else if (txtDni.getText().length() > 7) {
            evt.consume();
        }

    }

   
}
