/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Panels;

import Clases.Cliente;
import Clases.Comunicacion;
import Clases.Conectar;
import Clases.Cotizacion;
import Clases.Despacho;
import Clases.PersonaContacto;
import Clases.PlaceHolder;
import Clases.Seguimiento;
import Clases.Solicitud;
import Clases.tools;
import VentanasRST.Main;
import VentanasRST.listarClientes;
import VentanasRST.listarCotizacion;
import VentanasRST.verInfoPersonaContacto;
import VentanasRST.viewCotizacion;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.net.UnknownHostException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.border.MatteBorder;
import rojerusan.RSNotifyFade;

/**
 *
 * @author soporte
 */
public class panelAgregarComunicacion extends javax.swing.JPanel {

    listarCotizacion lc;
    viewCotizacion vCot;
    static Cotizacion c = new Cotizacion();
    Despacho despacho;
    Solicitud solicitud;
    public panelAgregarComunicacion() {
        initComponents();
        lc = new listarCotizacion();
        vCot = new viewCotizacion(this);
        new PlaceHolder("Ingrese la descripción de la comunicación realizada con el cliente", texto);
        colocarFecha();
    }

   /* public panelAgregarComunicacion(Main m) {
        initComponents();
        this.m = m;
        lc = new listarCotizacion();
        vCot = new viewCotizacion(m, this);
        new PlaceHolder("Ingrese la descripción de la comunicación realizada con el cliente", texto);
        colocarFecha();
    }*/

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buscarClienteButton = new RSMaterialComponent.RSButtonIconShadow();
        clienteTxt = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        fecha = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        comboContacto = new RSMaterialComponent.RSComboBoxMaterial();
        rSButtonIconShadow2 = new RSMaterialComponent.RSButtonIconShadow();
        jLabel3 = new javax.swing.JLabel();
        viaComunicacion = new RSMaterialComponent.RSComboBoxMaterial();
        jScrollPane1 = new javax.swing.JScrollPane();
        texto = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        rSButtonHover1 = new rojeru_san.complementos.RSButtonHover();
        jLabel7 = new javax.swing.JLabel();
        numCotTxt = new javax.swing.JTextField();
        rSButtonIconShadow3 = new RSMaterialComponent.RSButtonIconShadow();
        jLabel8 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        procesoTxt = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        buscarClienteButton.setBackground(new java.awt.Color(192, 121, 117));
        buscarClienteButton.setBackgroundHover(new java.awt.Color(161, 54, 48));
        buscarClienteButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        buscarClienteButton.setIcons(rojeru_san.efectos.ValoresEnum.ICONS.SEARCH);
        buscarClienteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarClienteButtonActionPerformed(evt);
            }
        });

        clienteTxt.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        clienteTxt.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        clienteTxt.setToolTipText("Presione F1 o la Lupa para buscar listado de Clientes");
        clienteTxt.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        clienteTxt.setOpaque(false);
        clienteTxt.setSelectionColor(new java.awt.Color(161, 54, 48));
        clienteTxt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                clienteTxtFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                clienteTxtFocusLost(evt);
            }
        });
        clienteTxt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                clienteTxtMouseExited(evt);
            }
        });
        clienteTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                clienteTxtKeyReleased(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("Cliente:");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setText("Fecha:");

        fecha.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        fecha.setForeground(new java.awt.Color(161, 54, 48));
        fecha.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        fecha.setText("@");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setText("Contacto:");

        comboContacto.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione un Cliente" }));
        comboContacto.setColorMaterial(new java.awt.Color(161, 54, 48));
        comboContacto.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        comboContacto.setVelMils(1);

        rSButtonIconShadow2.setBackground(new java.awt.Color(192, 121, 117));
        rSButtonIconShadow2.setBackgroundHover(new java.awt.Color(161, 54, 48));
        rSButtonIconShadow2.setIcons(rojeru_san.efectos.ValoresEnum.ICONS.SEARCH);
        rSButtonIconShadow2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rSButtonIconShadow2ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("Seleccione la via de Comunicación Usada:");

        viaComunicacion.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione", "Correo Electronico", "Whatsapp", "LLamada Telefónica" }));
        viaComunicacion.setColorMaterial(new java.awt.Color(161, 54, 48));
        viaComunicacion.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        viaComunicacion.setVelMils(1);

        texto.setColumns(20);
        texto.setRows(5);
        jScrollPane1.setViewportView(texto);

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        jLabel5.setText("Descripción");

        rSButtonHover1.setBackground(new java.awt.Color(192, 121, 117));
        rSButtonHover1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/ic_done_all_128_28243.png"))); // NOI18N
        rSButtonHover1.setText("Ingresar Datos");
        rSButtonHover1.setColorHover(new java.awt.Color(161, 54, 48));
        rSButtonHover1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rSButtonHover1ActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setText("Seleccione:");

        numCotTxt.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        numCotTxt.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        numCotTxt.setToolTipText("");
        numCotTxt.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        numCotTxt.setOpaque(false);
        numCotTxt.setSelectionColor(new java.awt.Color(161, 54, 48));
        numCotTxt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                numCotTxtFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                numCotTxtFocusLost(evt);
            }
        });
        numCotTxt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                numCotTxtMouseExited(evt);
            }
        });
        numCotTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                numCotTxtKeyReleased(evt);
            }
        });

        rSButtonIconShadow3.setBackground(new java.awt.Color(192, 121, 117));
        rSButtonIconShadow3.setBackgroundHover(new java.awt.Color(161, 54, 48));
        rSButtonIconShadow3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        rSButtonIconShadow3.setIcons(rojeru_san.efectos.ValoresEnum.ICONS.SEARCH);
        rSButtonIconShadow3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rSButtonIconShadow3ActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(153, 195, 236));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Ingresar Comunicaciones Realizadas con Clientes");

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/chat-26_64x64.png"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9)
                .addGap(18, 18, 18)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 550, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(108, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(jLabel1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel10.setText("Proceso:");

        procesoTxt.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        procesoTxt.setText("@Nombre del Proceso");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel8)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(81, 81, 81)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jLabel4)
                        .addGap(8, 8, 8)
                        .addComponent(fecha, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(18, 18, 18)
                        .addComponent(numCotTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(rSButtonIconShadow3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(procesoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addComponent(jLabel2)
                        .addGap(10, 10, 10)
                        .addComponent(clienteTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(buscarClienteButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel6)
                        .addGap(6, 6, 6)
                        .addComponent(comboContacto, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(rSButtonIconShadow2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel3)
                        .addGap(11, 11, 11)
                        .addComponent(viaComunicacion, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(453, 453, 453)
                        .addComponent(jLabel5))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 513, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(61, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(rSButtonHover1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(84, 84, 84))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8)
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(fecha)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(numCotTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(rSButtonIconShadow3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(procesoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(clienteTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buscarClienteButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboContacto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(rSButtonIconShadow2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(viaComunicacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addComponent(jLabel5)
                .addGap(4, 4, 4)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(rSButtonHover1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(36, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void buscarClienteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarClienteButtonActionPerformed
        new listarClientes(2).setVisible(true);
    }//GEN-LAST:event_buscarClienteButtonActionPerformed

    private void clienteTxtFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_clienteTxtFocusGained
        clienteTxt.setBorder(new MatteBorder(0, 0, 2, 0, new Color(161, 54, 48)));
    }//GEN-LAST:event_clienteTxtFocusGained

    private void clienteTxtFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_clienteTxtFocusLost
        clienteTxt.setBorder(new MatteBorder(0, 0, 1, 0, Color.BLACK));
    }//GEN-LAST:event_clienteTxtFocusLost

    private void clienteTxtMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clienteTxtMouseExited

        //
    }//GEN-LAST:event_clienteTxtMouseExited

    private void clienteTxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_clienteTxtKeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_F1) {
            new listarClientes(2).setVisible(true);
        } else if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

            String texto = clienteTxt.getText();
            Cliente cliente = new Cliente();
            int rsp = cliente.buscarNombre(texto);
            if (rsp == 1) {
                clienteTxt.setText(cliente.getNombre1());
            } else {
                boolean llave = cliente.ComprobarNumeros(texto);
                if (llave == true) {
                    int id = Integer.parseInt(texto);
                    cliente.setID(id);
                    int rsp2 = cliente.buscarId();
                    if (rsp2 == 1) {
                        clienteTxt.setText(cliente.getNombre1());
                        buscarContacto();
                    } else {
                        new rojerusan.RSNotifyFade("¡¡CLIENTE NO ENCONTRADO!!", "No se encontraron coincidencias con el valor ingresado", 3, RSNotifyFade.PositionNotify.BottomRight, RSNotifyFade.TypeNotify.ERROR).setVisible(true);
                        clienteTxt.requestFocus();
                        limpiarContacto();

                    }
                } else {
                    new rojerusan.RSNotifyFade("¡¡CLIENTE NO ENCONTRADO!!", "No se encontraron coincidencias con el valor ingresado", 3, RSNotifyFade.PositionNotify.BottomRight, RSNotifyFade.TypeNotify.ERROR).setVisible(true);
                    clienteTxt.requestFocus();
                    limpiarContacto();
                }

            }
        }
    }//GEN-LAST:event_clienteTxtKeyReleased

    private void rSButtonIconShadow2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rSButtonIconShadow2ActionPerformed
        if ("Seleccione un Cliente".equals(comboContacto.getSelectedItem().toString())) {
            JOptionPane.showMessageDialog(null, "Debes seleccionar una persona Valida para mostrar sus datos");
        } else {
            String persona = comboContacto.getSelectedItem().toString();
            PersonaContacto pc = new PersonaContacto();
            pc.buscarNombre(persona);
            new verInfoPersonaContacto(pc, 0).setVisible(true);
            verInfoPersonaContacto.idTxt.setToolTipText(clienteTxt.getText());
        }
    }//GEN-LAST:event_rSButtonIconShadow2ActionPerformed

    private void rSButtonHover1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rSButtonHover1ActionPerformed
        if (validarDatos()) {
            ingresarDatos();

        }
    }//GEN-LAST:event_rSButtonHover1ActionPerformed

    private void numCotTxtFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_numCotTxtFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_numCotTxtFocusGained

    private void numCotTxtFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_numCotTxtFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_numCotTxtFocusLost

    private void numCotTxtMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_numCotTxtMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_numCotTxtMouseExited

    private void numCotTxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_numCotTxtKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_numCotTxtKeyReleased

    private void rSButtonIconShadow3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rSButtonIconShadow3ActionPerformed
        vCot.setVisible(true);
    }//GEN-LAST:event_rSButtonIconShadow3ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private RSMaterialComponent.RSButtonIconShadow buscarClienteButton;
    public static javax.swing.JTextField clienteTxt;
    public static RSMaterialComponent.RSComboBoxMaterial comboContacto;
    private javax.swing.JLabel fecha;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JTextField numCotTxt;
    private static javax.swing.JLabel procesoTxt;
    private rojeru_san.complementos.RSButtonHover rSButtonHover1;
    private RSMaterialComponent.RSButtonIconShadow rSButtonIconShadow2;
    private RSMaterialComponent.RSButtonIconShadow rSButtonIconShadow3;
    private javax.swing.JTextArea texto;
    public static RSMaterialComponent.RSComboBoxMaterial viaComunicacion;
    // End of variables declaration//GEN-END:variables

    public static void buscarContacto() {

        Cliente c = new Cliente();
        String nombre = clienteTxt.getText();
        c.buscarNombre(nombre);
        int idCliente = c.getID();

        PersonaContacto pc = new PersonaContacto();
        pc.setIdCliente(idCliente);
        ArrayList<PersonaContacto> listado = (ArrayList) pc.listarPersonaContactoxCliente().clone();
        comboContacto.removeAllItems();
        for (int i = 0; i < listado.size(); i++) {
            String nombrex = listado.get(i).getNombres() + " " + listado.get(i).getApellidos();
            comboContacto.addItem(nombrex);
        }

        if (comboContacto.getItemCount() < 1) {
            comboContacto.addItem("Sin Persona Agg.");
        }

    }

    private void limpiarCampos() {
        clienteTxt.setText("");
        comboContacto.removeAllItems();
        viaComunicacion.setSelectedIndex(0);
        texto.setText("");
        clienteTxt.requestFocus();
        numCotTxt.setText("");
    }

    private void limpiarContacto() {
        comboContacto.removeAllItems();
        comboContacto.addItem("Seleccione un Cliente");
    }

    private void colocarFecha() {
        fecha.setText(new Conectar("rstcot").getFechaServidor());
        buscarClienteButton.setVisible(false);
    }

    private boolean validarDatos() {
        boolean rsp = false;

        if (clienteTxt.getText().length() == 0) {
            JOptionPane.showMessageDialog(null, "Ingrese Cliente Valido");
            clienteTxt.requestFocus();
        } else {
            if (comboContacto.getSelectedItem().equals("Seleccione un Cliente") || comboContacto.getSelectedItem().equals("Sin Persona Agg.")) {
                JOptionPane.showMessageDialog(null, "Ingrese Persona de COntacto");
                comboContacto.requestFocus();
            } else {
                if (viaComunicacion.getSelectedItem().equals("Seleccione")) {
                    JOptionPane.showMessageDialog(null, "Elija el medio por el cual se comunicó con el cliente");
                    viaComunicacion.requestFocus();
                } else {
                    if (texto.getText().length() == 0) {
                        JOptionPane.showMessageDialog(null, "Agregue la Descripción de la Comunicación");
                        texto.requestFocus();
                    } else {
                        rsp = true;
                    }
                }
            }
        }

        return rsp;
    }
static int idCotxx;
    public static void setCotizacion(Cotizacion c) {
        c = c;
        numCotTxt.setText(c.getNumeroCot() + "");
        idCotxx =c.getID();       
        clienteTxt.setText(c.getCliente());        
        procesoTxt.setText("Cotización");
        buscarContacto();
        
    }

    
    public  void setSolicitud(Solicitud s){
        this.solicitud = s;
        procesoTxt.setText("Solicitud");
        Cliente clienteTemp = new Cliente().buscarId(solicitud.getIdCliente());
        clienteTxt.setText(clienteTemp.getNombre1());
        numCotTxt.setText(solicitud.getId()+"");
        idCotxx = solicitud.getId();
         buscarContacto();
    }
    public void setOtro(Cliente c){
        procesoTxt.setText("Cliente");
        clienteTxt.setText(c.getNombre1());
        numCotTxt.setText(c.getID()+"");
        buscarContacto();
        
    }
    public void setDespacho(Despacho d){
        this.despacho = d;
        Cotizacion ctemp = new Cotizacion().buscarID(despacho.getIdCot());
         procesoTxt.setText("Despacho");
         clienteTxt.setText(ctemp.getCliente());
         numCotTxt.setText(ctemp.getNumeroCot() + "");
         idCotxx = despacho.getId();
          buscarContacto();
    }
    private void ingresarDatos() {
        try {
            int idPersonaContacto = new PersonaContacto().buscarNombre(comboContacto.getSelectedItem().toString());
            String vendedor = (Main.getVendedor()).equals("vacio") ? "vacio" : Main.getVendedor();
            Cliente cc = new Cliente();
            cc.buscarNombre(clienteTxt.getText());
            int idCliente = cc.getID();
            
            String fecha = new Conectar("rstcot").getFechaServidor();
            String tipoComunicacion = viaComunicacion.getSelectedItem().toString();
            String tipoProceso = procesoTxt.getText();
            
            int rsp = new Comunicacion(
                    idCotxx, idCliente, idPersonaContacto, vendedor, fecha, 
                    tipoComunicacion, texto.getText(),tipoProceso
            ).insert();
            
            System.out.println("tipoProceso: "+tipoProceso);
            if (rsp == 1) {
                int idComunicacion = new Comunicacion().getLastComunicacion();

                new Seguimiento(//
                        idCliente, fecha + "", "Comunicacion", "Nueva Comunicación",
                        vendedor, idComunicacion, new tools().Obtener_ip()
                ).insert();
                
                new rojerusan.RSNotifyFade("¡¡SUCCESS!!", "Se agregó correctamente la información ingresada.", 8, RSNotifyFade.PositionNotify.BottomRight, RSNotifyFade.TypeNotify.SUCCESS).setVisible(true);
                limpiarCampos();
                limpiarContacto();
                numCotTxt.requestFocus();
            }
        } catch (UnknownHostException ex) {
            Logger.getLogger(panelAgregarComunicacion.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
